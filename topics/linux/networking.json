{
  "cards":  [
    {
      "id": "lan_definition",
      "type": "basic",
      "question": "What is a LAN?",
      "answer": "A LAN (Local Area Network) is a group of interconnected devices located in a single physical location. Its range can vary from small (e.g., a private residence) to large (e.g., an enterprise campus), but it is limited by its physical boundaries."
    },
    {
      "id": "lan_definition_typing",
      "type": "typing",
      "question": "How do you call a network made of devices located in a single physical location?",
      "answer": "LAN (Local Area Network)"
    },
    {
      "id": "wan_definition",
      "type": "basic",
      "question": "What is a WAN?",
      "answer": "A WAN (Wide Area Network) is a network of networks, consisting of multiple distributed LANs communicating with each other. The internet is the largest WAN, but the private network of a multinational corporation is also considered a WAN."
    },
     {
      "id": "wan_definition_typing",
      "type": "typing",
      "question": "How do you call a network of multiple distributed LANs?",
      "answer": "WAN (Wide Area Network)"
    },
    {
      "id": "pan_definition",
      "type": "basic",
      "question": "What is a PAN?",
      "answer": "A PAN (Personal Area Network) is a specialized type of LAN formed by personal devices interconnected using short-range technologies like Bluetooth, USB, or Infrared. It is typically used for personal communication between devices within a few meters."
    },
     {
      "id": "pan_definition_typing",
      "type": "typing",
      "question": "How do you call a special LAN formed by personal devices?",
      "answer": "PAN (Personal Area Network)"
    },
    {
      "id": "man_definition",
      "type": "basic",
      "question": "What is a MAN?",
      "answer": "A MAN (Metropolitan Area Network) spans a city or urban area, often implemented with high-speed technologies such as fiber optics. MANs are typically larger than LANs but smaller than WANs."
    },
     {
      "id": "man_definition_typing",
      "type": "typing",
      "question": "How do you call a network that spans a city or urban area?",
      "answer": "MAN (Metropolitan Area Network)"
    },
    {
      "id": "ian_definition",
      "type": "basic",
      "question": "What is an IAN?",
      "answer": "An IAN (Internet Area Network), as referenced by Balog in Mastering Linux Administration, is not a widely recognized or generally defined term and should be avoided in most contexts to prevent confusion."
    },
    {
      "id": "vlan_definition",
      "type": "basic",
      "question": "What is a VLAN?",
      "answer": "A VLAN (Virtual Local Area Network) is a logical segmentation of a LAN into separate virtual networks. It can group devices logically regardless of their physical location, improving security, performance, and manageability. VLANs are created using network switches and routers, utilizing tagging protocols like IEEE 802.1Q."
    },
     {
      "id": "vlan_definition_typing",
      "type": "typing",
      "question": "How do you call a logical segment of a LAN?",
      "answer": "VLAN (Virtual Local Area Network)"
    },
    {
      "id": "osi_model_overview",
      "type": "basic",
      "question": "What is the OSI model?",
      "answer": "The OSI (Open Systems Interconnection) model is a conceptual framework with 7 layers (Physical, Data Link, Network, Transport, Session, Presentation, Application) used to standardize and understand how data is transmitted across networks."
    },
     {
      "id": "osi_model_overview_typing",
      "type": "typing",
      "question": "What does OSI stand for? Give the number of Layers in the model and list them in correct sequence?",
      "answer": "OSI (Open Systems Interconnection) model is formed of 7 layers (Physical, Data Link, Network, Transport, Session, Presentation, Application)."
    },
    {
      "id": "osi_physical_layer",
      "type": "basic",
      "question": "What is the role of the Physical layer in the OSI model?",
      "answer": "The Physical layer (Layer 1) is responsible for the transmission of raw binary data over physical mediums like cables, fiber optics, or radio waves."
    },
    {
      "id": "osi_data_link_layer",
      "type": "basic",
      "question": "What does the Data Link layer do in the OSI model?",
      "answer": "The Data Link layer (Layer 2) ensures reliable data transfer across a physical link, handles MAC addresses, and defines protocols for error detection and flow control."
    },
    {
      "id": "osi_network_layer",
      "type": "basic",
      "question": "What is the purpose of the Network layer in the OSI model?",
      "answer": "The Network layer (Layer 3) is responsible for routing and forwarding data, and defines logical addressing (e.g., IP addresses)."
    },
    {
      "id": "osi_transport_layer",
      "type": "basic",
      "question": "What is the role of the Transport layer in the OSI model?",
      "answer": "The Transport layer (Layer 4) manages end-to-end communication, error checking, and flow control, using protocols like TCP and UDP."
    },
    {
      "id": "osi_session_layer",
      "type": "basic",
      "question": "What does the Session layer do in the OSI model?",
      "answer": "The Session layer (Layer 5) establishes, manages, and terminates sessions between applications on different devices."
    },
    {
      "id": "osi_presentation_layer",
      "type": "basic",
      "question": "What is the purpose of the Presentation layer in the OSI model?",
      "answer": "The Presentation layer (Layer 6) translates data formats, encrypts/decrypts information, and ensures data compatibility between systems."
    },
    {
      "id": "osi_application_layer",
      "type": "basic",
      "question": "What is the role of the Application layer in the OSI model?",
      "answer": "The Application layer (Layer 7) provides network services directly to user applications, such as web browsing (HTTP), email (SMTP), and file transfer (FTP)."
    },
    {
      "id": "dns_protocol_overview",
      "type": "basic",
      "question": "What is the DNS protocol?",
      "answer": "The DNS (Domain Name System) protocol translates human-readable domain names into IP addresses, allowing devices to locate each other on a network. DNS operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "dns_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol translates human-readable domain names into IP adresses - Which OSI layer does it operate at?",
      "answer": "The DNS (Domain Name System) protocol operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "http_protocol_overview",
      "type": "basic",
      "question": "What is the HTTP protocol?",
      "answer": "HTTP (Hypertext Transfer Protocol) is a stateless protocol used for transferring web resources, such as HTML files, images, and videos. HTTP operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "http_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol transfers web resources - Which OSI layer does it operate at?",
      "answer": "The HTTP (Hypertext Transfer Protocol) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "ftp_protocol_overview",
      "type": "basic",
      "question": "What is the FTP protocol?",
      "answer": "FTP (File Transfer Protocol) is a standard protocol for transferring files between a client and a server. FTP operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "ftp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol transfers files between a client and a server - Which OSI layer does it operate at?",
      "answer": "The FTP (File Transfer Protocol) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "smtp_protocol_overview",
      "type": "basic",
      "question": "What is the SMTP protocol?",
      "answer": "SMTP (Simple Mail Transfer Protocol) is a protocol for sending and receiving emails. It supports encryption and host authentication, and it operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "smtp_protocol_overview_typing",
      "type": "typing",
      "question": "Whcih protocol sends and receives emails - Which OSI layer does it operate at?",
      "answer": "The SMTP (Simple Mail Transfer Protocol) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "arp_protocol_overview",
      "type": "basic",
      "question": "What is the ARP protocol?",
      "answer": "ARP (Address Resolution Protocol) maps IP addresses to MAC addresses for communication within a local network. It operates at the Data Link layer (Layer 2) in the OSI model."
    },
     {
      "id": "arp_protocol_overview_typing",
      "type": "typing",
      "question": "Whcih protocol maps IP addresses to MAC addresses - Which OSI layer does it operate at?",
      "answer": "The ARP (Address Resolution Protocol) operates at the Data Link layer (Layer 2) in the OSI model."
    },
    {
      "id": "ndp_protocol_overview",
      "type": "basic",
      "question": "What is the NDP protocol?",
      "answer": "NDP (Neighbor Discovery Protocol) is similar to ARP but designed for IPv6. It maps IPv6 addresses to MAC addresses and operates at the Data Link layer (Layer 2) in the OSI model."
    },
     {
      "id": "ndp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol is similar to ARP, but designed for IPv6 - Which OSI layer does it operate at?",
      "answer": "The NDP (Neighbor Discovery Protocol) operates at the Data Link layer (Layer 2) in the OSI model."
    },
    {
      "id": "tcp_protocol_overview",
      "type": "basic",
      "question": "What is the TCP protocol?",
      "answer": "TCP (Transmission Control Protocol) is a connection-oriented protocol that ensures reliable data delivery through error checking and retransmissions. TCP operates at the Transport layer (Layer 4) in the OSI model."
    },
     {
      "id": "tcp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol ensures reliable data delivery throguh error checking and retransmissions - Which OSI layer does it operate at?",
      "answer": "The TCP (Transmission Control Protocol) operates at the Transport layer (Layer 4) in the OSI model."
    },
    {
      "id": "udp_protocol_overview",
      "type": "basic",
      "question": "What is the UDP protocol?",
      "answer": "UDP (User Datagram Protocol) is a connectionless protocol that offers low-latency communication without error checking. It operates at the Transport layer (Layer 4) in the OSI model."
    },
     {
      "id": "udp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol offers low-latency communication without error checking - Which OSI layer does it operate at?",
      "answer": "The UDP (User Datagram Protocol) operates at the Transport layer (Layer 4) in the OSI model."
    },
    {
      "id": "dhcp_protocol_overview",
      "type": "basic",
      "question": "What is the DHCP protocol?",
      "answer": "DHCP (Dynamic Host Configuration Protocol) dynamically assigns IP addresses and other network configuration details to devices on a network. DHCP operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "dhcp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol dynammically assigns ip addresses to devices on a network - Which OSI layer does it operate at?",
      "answer": "The DHCP (Dynamic Host Configuration Protocol) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "icmp_protocol_overview",
      "type": "basic",
      "question": "What is ICMP?",
      "answer": "ICMP (Internet Control Message Protocol) reports errors and diagnostic information, commonly used by tools like ping. It operates at the Network layer (Layer 3) in the OSI model."
    },
     {
      "id": "icmp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol reports errors and diagnostics and is used by the tool ping - Which OSI layer does it operate on?",
      "answer": "The ICMP (Internet Control Message Protocol) operates at the Network layer (Layer 3) in the OSI model."
    },
    {
      "id": "ntp_protocol_overview",
      "type": "basic",
      "question": "What is the NTP protocol?",
      "answer": "NTP (Network Time Protocol) synchronizes system clocks across networks, ensuring accurate timekeeping. It operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "ntp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol synchronizes system clocks across networks - Which OSI layer does it operate at?",
      "answer": "The NTP (Network Time Protocol) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "snmp_protocol_overview",
      "type": "basic",
      "question": "What is the SNMP protocol?",
      "answer": "SNMP (Simple Network Management Protocol) allows remote monitoring and management of network devices. It operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "snmp_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol allows remote monitoring of network devices - Which OSI layer does it operate at?",
      "answer": "The SNMP (Simple Network Management Protocol) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "ssh_protocol_overview",
      "type": "basic",
      "question": "What is the SSH protocol?",
      "answer": "SSH (Secure Shell) provides encrypted communication for secure remote access and file transfers. It operates at the Application layer (Layer 7) in the OSI model."
    },
     {
      "id": "ssh_protocol_overview_typing",
      "type": "typing",
      "question": "Which protocol provides encrypted communication for remote access and file transfers - Which OSI layer does it operate at?",
      "answer": "The SSH (Secure Shell) operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "osi_encapsulation_process",
      "type": "basic",
      "question": "What happens during the encapsulation process in the OSI model?",
      "answer": "In encapsulation, data passes from the Application layer (Layer 7) to the Physical layer (Layer 1). Each layer has distinct responsibilities: Layer 7 (Application) defines the payload, Layer 6 (Presentation) manages compression, encryption, and encoding, Layer 5 (Session) includes session identifiers to manage communication sessions, Layer 4 (Transport) adds the TCP/UDP header, Layer 3 (Network) adds the IP header, Layer 2 (Data Link) adds the MAC header for addressing and Frame Check Sequence (FCS) for error detection, and Layer 1 (Physical) transmits the raw bits."
    },
    {
      "id": "osi_encapsulation_process_typing",
      "type": "typing",
      "question": "What is the name of the process that passes data from the Application layer (Layer 7) to the Physical layer (Layer 1) in the OSI model? What are the responsibilities of the different layers during the process?",
      "answer": "Encapsulation, Layer 7 (Application) defines the payload, Layer 6 (Presentation) manages compression, encryption, encoding, Layer 5 (Session) includes session identifiers, Layer 4 (Transport) adds TCP/UDP header, Layer 3 (Network) adds IP header, Layer 2 (Data Link) adds MAC header and Frame Check Seuqence (FCS), Layer 1 (Physical) transmits raw bits."
    },
    {
      "id": "osi_decapsulation_process",
      "type": "basic",
      "question": "What happens during the decapsulation process in the OSI model?",
      "answer": "In decapsulation, data is received at the Physical layer (Layer 1) and passed to the Application layer (Layer 7). Each layer removes its corresponding header: Layer 1 converts signals to raw bits, Layer 2 deals with error detection and addressing, so during decapsulation it verifies the Frame Check Sequence (FCS) and removes the MAC header, Layer 3 processes the IP header, Layer 4 reassembles the data using the TCP/UDP header, Layer 5 identifies the session, Layer 6 decrypts and decodes the data, and Layer 7 interprets the payload for the application."
    },
    {
      "id": "osi_decapsulation_process_typing",
      "type": "typing",
      "question": "What is the name of the process where data is received at the Physical layer (Layer 1) and passed to the Application layer (Layer 7) in the OSI model? What are the responsibilities of the different layers during the process?",
      "answer": "Decapsulation, Layer 1 (Physical) converts signals to raw bits, Layer 2 (Data Link) verifies the Frame Check Sequence FCS and removes the MAC hader, Layer 3 (Network) processes the IP header, Layer 4 (Transport) reassembles the data that was fragmented during transport using the TCP/UDP header, Layer 5 (Session) identifies the session, Layer 6 (Presentation) decrypts and decodes the data, Layer 7 (Application) interprets the payload for the application."
    },
    {
      "id": "osi_tcpip_relationship",
      "type": "basic",
      "question": "How do the OSI model and the TCP/IP model relate?",
      "answer": "The OSI model has 7 layers, while the TCP/IP model has 4 layers. The OSI Application, Presentation, and Session layers map to the TCP/IP Application layer. The OSI Transport layer corresponds to the TCP/IP Transport layer. The OSI Network layer maps to the TCP/IP Internet layer, and the OSI Data Link and Physical layers correspond to the TCP/IP Network Access layer."
    },
    {
      "id": "osi_tcpip_relationship_typing",
      "type": "typing",
      "question": "Type in the OSI model layers and their respective counterparts in the TCP/IP model.  OSI layer number(s) -> TCP/IP layer name",
      "answer": "Layers 7, 6, 5 -> Application, Layer 4 -> Transport, Layer 3 -> Internet, Layers 2, 1 -> Network Access"
    },
    {
      "id": "osi_processing_end_to_end_vs_hop",
      "type": "basic",
      "question": "How does OSI layer processing differ between end-to-end communication and at network hops?",
      "answer": "End-to-end communication involves processing all OSI layers from the application layer to the physical layer. At network hops, devices like routers only process up to Layer 3 (Network Layer), stripping and re-encapsulating Layer 2 frames for forwarding."
    },
    {
      "id": "osi_router_role",
      "type": "basic",
      "question": "Which OSI layers do routers operate on, and what is their role?",
      "answer": "Routers operate primarily at Layer 3 (Network Layer). They inspect IP packets for destination addresses, determine the best path for forwarding, and re-encapsulate the packet in a new Layer 2 frame for the next hop."
    },
    {
      "id": "osi_layer2_re_encapsulation",
      "type": "basic",
      "question": "What happens to Layer 2 frames at each network hop?",
      "answer": "At each network hop, the Layer 2 frame is stripped off and replaced with a new frame for the next link. This ensures compatibility with the specific physical and data link layers of each hop."
    },
    {
      "id": "osi_hop_processing_efficiency",
      "type": "basic",
      "question": "Why do intermediate devices like routers only process data up to Layer 3 in the OSI model?",
      "answer": "Processing only up to Layer 3 minimizes overhead, ensures modularity between network layers, and allows efficient forwarding without needing to inspect higher-layer data. This also enables encrypted data to remain untouched during transit, preserving end-to-end security."
    },
    {
      "id": "ethernet_frames_overview",
      "type": "basic",
      "question": "What is an Ethernet frame?",
      "answer": "An Ethernet frame is a data packet format used in Ethernet networks. It contains fields like the destination MAC address, source MAC address, EtherType, payload (data), and a Frame Check Sequence (FCS) for error detection. Ethernet frames are typically between 64 and 1518 bytes in size for standard Ethernet. EtherType is a 16-bit field in the Ethernet frame that specifies the protocol encapsulated in the payload of the frame. Comon values include 0x0800 IPv4, 0x86DD ARP (Adress Resolution Protocol)"
    },
    {
      "id": "ethernet_frames_overview_typing",
      "type": "typing",
      "question": "What is the name of the data packet format used in Ethernet networks?",
      "answer": "Ethernet frame"
    },
    {
      "id": "ethernet_frame_structure_typing",
      "type": "typing",
      "question": "What are the main fields in an Ethernet frame?",
      "answer": "Destination MAC address, source MAC address, EtherType, Payload (data), and Frame Check Sequence (FCS) for error detection."
    },
    {
      "id": "ethernet_frame_size_range",
      "type": "basic",
      "question": "What is the standard size range of an Ethernet frame in IEEE 802.3?",
      "answer": "The standard size range is 64 to 1518 bytes."
    },
    {
      "id": "ethernet_runt_frames",
      "type": "basic",
      "question": "What are 'runt frames' in Ethernet, and what typically causes them?",
      "answer": "'Runt frames' are Ethernet frames smaller than 64 bytes, typically caused by errors during transmission."
    },
    {
      "id": "ethernet_jumbo_frames",
      "type": "basic",
      "question": "What are 'jumbo frames' in Ethernet, and when are they used?",
      "answer": "'Jumbo frames' are Ethernet frames larger than 1518 bytes. They are used in some networks, such as high-speed or storage networks, to optimize performance. All devices on the network must explicitly support jumbo frames."
    },
    {
      "id": "ethernet_standard_vs_nonstandard",
      "type": "basic",
      "question": "What does 'standard Ethernet' refer to, and how does it differ from non-standard implementations?",
      "answer": "'Standard Ethernet' refers to IEEE 802.3, which governs wired Ethernet connections. Non-standard implementations include wireless networking (IEEE 802.11) or specialized Ethernet variants like InfiniBand or proprietary setups."
    },
    {
      "id": "ethernet_frame_components",
      "type": "basic",
      "question": "What components are included in an Ethernet frame?",
      "answer": "An Ethernet frame includes the destination MAC address, source MAC address, EtherType, payload (data), and Frame Check Sequence (FCS)."
    },
    {
      "id": "ethernet_frame_mtu",
      "type": "basic",
      "question": "What does MTU (Maximum Transmission Unit) refer to in Ethernet?",
      "answer": "MTU refers to the maximum payload size that can be transmitted in an Ethernet frame without fragmentation."
    },
    {
      "id": "ethernet_frame_size_efficiency",
      "type": "basic",
      "question": "Why is the size range of Ethernet frames (64–1518 bytes) so large?",
      "answer": "The range accounts for different applications. Larger sizes generally increase efficiency during normal operations but can lead to higher latency in the event of retransmissions due to errors."
    },
    {
      "id": "ieee_802_curriculum_relevance",
      "type": "basic",
      "question": "Which IEEE 802 standards are most relevant for a networking curriculum?",
      "answer": "The most relevant are IEEE 802.3 (Ethernet), IEEE 802.11 (Wi-Fi), IEEE 802.1 (VLANs), IEEE 802.15 (Bluetooth/Zigbee), and IEEE 802.16 (WiMAX)."
    },
    {
      "id": "ethernet_frame_etherType",
      "type": "basic",
      "question": "What is the purpose of the EtherType field in an Ethernet frame?",
      "answer": "The EtherType field is a 16-bit field in the Ethernet frame that specifies the protocol encapsulated in the payload of the frame."
    },
    {
      "id": "ethernet_frame_etherType_values",
      "type": "basic",
      "question": "What are common values for the EtherType field in an Ethernet frame?",
      "answer": "Common values include 0x0800 for IPv4 and 0x86DD for ARP (Address Resolution Protocol)."
    },
    {
      "id": "ieee_definition",
      "type": "basic",
      "question": "What does IEEE stand for?",
      "answer": "IEEE stands for the Institute of Electrical and Electronics Engineers."
    },
    {
      "id": "ieee_role_in_networking",
      "type": "basic",
      "question": "What is the role of IEEE in networking?",
      "answer": "IEEE defines standards for networking technologies, including Ethernet (IEEE 802.3) and Wi-Fi (IEEE 802.11)."
    },
    {
      "id": "ieee_802_definition",
      "type": "basic",
      "question": "What is IEEE 802?",
      "answer": "IEEE 802 is a set of standards for local and metropolitan area networks (LANs and MANs), focusing on physical and data link layers of the OSI model."
    },
    {
      "id": "ieee_802_layer_focus",
      "type": "basic",
      "question": "Which layers of the OSI model do IEEE 802 standards focus on?",
      "answer": "IEEE 802 standards focus on the physical and data link layers of the OSI model."
    },
    {
      "id": "ieee_802_3_ethernet",
      "type": "basic",
      "question": "What does IEEE 802.3 define?",
      "answer": "IEEE 802.3 defines Ethernet standards for wired local area networks (LANs)."
    },
    {
      "id": "ieee_802_3_ethernet_detail",
      "type": "basic",
      "question": "What does the IEEE 802.3 standard cover in detail?",
      "answer": "The IEEE 802.3 standard covers Ethernet, including specifications for wired LANs, Ethernet frame structure, MAC addressing, and physical layer characteristics."
    },
    {
      "id": "ieee_802_11_wifi",
      "type": "basic",
      "question": "What does IEEE 802.11 define?",
      "answer": "IEEE 802.11 defines standards for wireless local area networks (Wi-Fi)."
    },
    {
      "id": "ieee_802_1_vlan",
      "type": "basic",
      "question": "What does IEEE 802.1 focus on?",
      "answer": "IEEE 802.1 focuses on network architecture, bridging, and management, including VLANs and Spanning Tree Protocol (STP)."
    },
    {
      "id": "ieee_802_15_bluetooth",
      "type": "basic",
      "question": "What does IEEE 802.15 define?",
      "answer": "IEEE 802.15 defines standards for Wireless Personal Area Networks (WPANs), including Bluetooth and Zigbee."
    },
    {
      "id": "ieee_802_16_wimax",
      "type": "basic",
      "question": "What does IEEE 802.16 define?",
      "answer": "IEEE 802.16 defines standards for broadband wireless access, including WiMAX."
    },
    {
      "id": "ieee_ethernet_wifi_comparison",
      "type": "basic",
      "question": "What is the difference between IEEE 802.3 (Ethernet) and IEEE 802.11 (Wi-Fi)?",
      "answer": "IEEE 802.3 defines standards for wired networks (Ethernet), while IEEE 802.11 defines standards for wireless networks (Wi-Fi)."
    },
    {
      "id": "ieee_common_protocols",
      "type": "basic",
      "question": "What are common protocols defined by IEEE 802 standards?",
      "answer": "Common protocols include Ethernet (802.3), Wi-Fi (802.11), VLANs (802.1), Bluetooth/Zigbee (802.15), and WiMAX (802.16)."
    },
    {
      "id": "snap_protocol_definition",
      "type": "basic",
      "question": "What is the SubNetwork Access Protocol (SNAP)?",
      "answer": "The SubNetwork Access Protocol (SNAP) is a mechanism used in Ethernet frames to extend the EtherType field, enabling support for additional protocols beyond those defined by IEEE 802.3. This is used for proprietary solutions and uncomon in modern general purpouse networks."
    },
    {
      "id": "icmp_overview",
      "type": "basic",
      "question": "What is ICMP (Internet Control Message Protocol)?",
      "answer": "ICMP is a Layer 3 (Network Layer) protocol used for diagnostic and error-reporting purposes. It operates directly on top of IP and is commonly used by tools like ping and traceroute to check connectivity and troubleshoot network issues."
    },

{
  "id": "data_segments_definition",
  "type": "basic",
  "question": "What are data segments in networking?",
  "answer": "Data segments are units of data used in the Transport layer (OSI Layer 4). They include the application data along with transport layer headers, such as TCP or UDP headers."
},
{
  "id": "network_datagrams_definition",
  "type": "basic",
  "question": "What are datagrams in networking?",
  "answer": "Datagrams are units of data used in the Network layer (OSI Layer 3). They consist of data segments from the Transport layer with an added IP header for routing purposes."
},
{
  "id": "ethernet_frames_definition",
  "type": "basic",
  "question": "What are Ethernet frames in networking?",
  "answer": "Ethernet frames are units of data used in the Data Link layer (OSI Layer 2). They encapsulate datagrams from the Network layer with MAC addresses and error-checking fields for local transmission."
},
{
  "id": "segments_vs_datagrams_vs_frames",
  "type": "basic",
  "question": "What are the roles of data segments, datagrams, and Ethernet frames in the OSI model?",
  "answer": "Data segments operate at Layer 4 (Transport Layer) to ensure proper delivery of application data. Datagrams operate at Layer 3 (Network Layer) to handle routing between networks. Ethernet frames operate at Layer 2 (Data Link Layer) for local transmission using MAC addresses."
},
{
  "id": "osi_layer_encapsulation_hierarchy",
  "type": "basic",
  "question": "How are data segments, datagrams, and Ethernet frames related in the OSI encapsulation process?",
  "answer": "Application data is encapsulated into a data segment (Layer 4), which is then encapsulated into a datagram (Layer 3) with an IP header. The datagram is further encapsulated into an Ethernet frame (Layer 2) for local transmission."
},
{
  "id": "osi_addressing_differences",
  "type": "basic",
  "question": "How do data segments, datagrams, and Ethernet frames handle addressing?",
  "answer": "Data segments use port numbers (e.g., TCP/UDP headers) for transport-layer addressing. Datagrams use IP addresses for routing across networks. Ethernet frames use MAC addresses for local device identification."
},
{
  "id": "osi_encapsulation_process",
  "type": "basic",
  "question": "What happens during the encapsulation process in the OSI model?",
  "answer": "Application data is encapsulated into a transport-layer segment, then into a network-layer datagram, and finally into a data link-layer frame for physical transmission."
},
{
  "id": "osi_end_to_end_vs_local",
  "type": "basic",
  "question": "What is the difference between end-to-end delivery and local delivery in the OSI model?",
  "answer": "End-to-end delivery involves data segments (Layer 4) and datagrams (Layer 3) to ensure the message reaches the correct application on the destination device. Local delivery involves Ethernet frames (Layer 2) for transmitting data across a single network segment."
},
{
  "id": "osi_real_world_encapsulation",
  "type": "basic",
  "question": "How is an HTTP request encapsulated and transmitted across the OSI layers?",
  "answer": "An HTTP request (Layer 7) is encapsulated into a TCP segment (Layer 4), which is encapsulated into an IP datagram (Layer 3), and finally into an Ethernet frame (Layer 2) for transmission."
},
{
  "id": "osi_encapsulation_visualized",
  "type": "basic",
  "question": "What does the encapsulation structure of an Ethernet frame containing a datagram and a segment look like?",
  "answer": "The structure is: | Ethernet Header (MAC addresses) | IP Header (source/destination IP) | TCP/UDP Header (source/destination port) | Application Data |."
},
{
  "id": "ipv4_definition",
  "type": "basic",
  "question": "What is an IPv4 address?",
  "answer": "An IPv4 address is a 32-bit address represented in decimal format, consisting of four octets separated by dots (e.g., 192.168.1.1). It is widely used in modern networks."
},
{
  "id": "ipv6_definition",
  "type": "basic",
  "question": "What is an IPv6 address?",
  "answer": "An IPv6 address is a 128-bit address represented in hexadecimal format, consisting of eight groups of four hexadecimal digits separated by colons (e.g., 2001:0db8:85a3:0000:0000:8a2e:0370:7334)."
},
{
  "id": "ipv4_vs_ipv6",
  "type": "basic",
  "question": "What is the primary difference between IPv4 and IPv6?",
  "answer": "IPv4 uses 32-bit addresses, supporting approximately 4.3 billion unique addresses. IPv6 uses 128-bit addresses, supporting a vastly larger address space to accommodate the growing number of internet-connected devices."
},
{
  "id": "why_ipv6_introduced",
  "type": "basic",
  "question": "Why was IPv6 introduced?",
  "answer": "IPv6 was introduced to address the limitations of IPv4's address space. IPv4's 4.3 billion addresses are insufficient for the growing number of devices, while IPv6 provides an almost unlimited address space."
},
{
  "id": "ipv4_nat",
  "type": "basic", 
  "question": "How does IPv4 use NAT (Network Address Translation) to overcome address limitations?",
  "answer": "NAT allows multiple devices on a private network to share a single public IPv4 address by modifying IP addresses in packet headers as they pass through a router." 
},
{
  "id": "ipv6_replace_ipv4_commands",
  "type": "basic",
  "question": "Can IPv6 be used in commands where IPv4 is shown, such as 'ip addr add'? Should there be separate examples?",
  "answer": "Yes, IPv6 can replace IPv4 in commands like 'ip addr add' by using an IPv6 address instead of IPv4. It can be useful to provide both IPv4 and IPv6 examples to ensure learners understand the syntax for both."
},
{
  "id": "dual_stack_networks",
  "type": "basic",
  "question": "What is a dual-stack network?",
  "answer": "A dual-stack network supports both IPv4 and IPv6 protocols, allowing devices to communicate using either address format depending on the destination."
},
{
  "id": "subnet_mask_definition",
  "type": "basic",
  "question": "What is a subnet mask?",
  "answer": "A subnet mask is a 32-bit number used in IPv4 to divide an IP address into network and host portions. It determines which part of the address identifies the network and which part identifies the host."
},
{
  "id": "subnet_mask_example",
  "type": "basic",
  "question": "What does the subnet mask 255.255.255.0 indicate?",
  "answer": "The subnet mask 255.255.255.0 indicates that the first 24 bits of the IP address represent the network, leaving 8 bits for host addresses. This allows for 256 addresses within the subnet, including network and broadcast addresses."
},
{
  "id": "subnet_mask_purpose",
  "type": "basic",
  "question": "What is the purpose of a subnet mask in networking?",
  "answer": "The purpose of a subnet mask is to determine whether an IP address belongs to the same subnet or requires routing to another subnet."
},
{
  "id": "subnet_mask_internal_networks",
  "type": "basic",
  "question": "How are subnet masks used in internal networks?",
  "answer": "Subnet masks are used to segment an internal network into subnets, grouping devices and determining whether an IP address is local or requires routing across subnets."
},
{
  "id": "nat_subnet_mask_relationship",
  "type": "basic",
  "question": "How do NAT and subnet masks work together in a network?",
  "answer": "NAT translates private IP addresses to a public IP address for internet communication, while subnet masks divide the internal network into subnets and determine local routing. NAT hides the internal structure, including subnets, from external networks."
},
{
  "id": "static_ip_address_definition",
  "type": "basic",
  "question": "What is a static IP address?",
  "answer": "A static IP address is manually assigned to a device and does not change over time. It is commonly used for servers, printers, and other devices requiring consistent addresses."
},
{
  "id": "dynamic_ip_address_definition",
  "type": "basic",
  "question": "What is a dynamically assigned IP address?",
  "answer": "A dynamically assigned IP address is automatically allocated by a DHCP server and may change over time. It is commonly used for client devices like laptops and smartphones."
},
{
  "id": "subnetting_benefits",
  "type": "basic",
  "question": "What are the benefits of subnetting in a network?",
  "answer": "Subnetting improves network organization, reduces congestion, enhances security by isolating groups of devices, and optimizes the use of IP address space."
},
{
  "id": "cidr_notation",
  "type": "basic",
  "question": "What is CIDR notation, and how is it related to subnet masks?",
  "answer": "CIDR (Classless Inter-Domain Routing) notation represents a subnet mask as a suffix to an IP address, indicating the number of bits used for the network. For example, 192.168.1.0/24 means the first 24 bits represent the network."
},
{
  "id": "ip_link_show_output",
  "type": "basic",
  "question": "What information can you learn from the output of 'ip link show'?",
  "answer": "The output of 'ip link show' provides details about network interfaces:\n- **Interface index and name:** E.g., 1: lo, 2: enp0s25.\n- **State:** E.g., UP, DOWN, or UNKNOWN.\n- **MTU:** Maximum Transmission Unit (e.g., 1500).\n- **MAC address:** Hardware address (e.g., 60:67:20:b7:33:40).\n- **Additional flags:** Indicate properties like BROADCAST, MULTICAST, or LOOPBACK."
},
{
  "id": "linux_check_nic",
  "type": "typing",
  "question": "What command can you use to find network interfaces in Linux?",
  "answer": "ip link show"
},
{
  "id": "ip_link_show_output",
  "type": "basic",
  "question": "What information can you learn from the output of 'ip link show'?",
  "answer": "The output of 'ip link show' provides details about network interfaces:\n- **Interface index and name:** E.g., 1: lo, 2: enp0s25.\n- **State:** E.g., UP, DOWN, or UNKNOWN.\n- **MTU:** Maximum Transmission Unit (e.g., 1500).\n- **MAC address:** Hardware address (e.g., 60:67:20:b7:33:40).\n- **Additional flags:** Indicate properties like BROADCAST, MULTICAST, or LOOPBACK."
},
{
  "id": "count_network_interfaces",
  "type": "typing",
  "question": "How many network interfaces are shown in the output of 'ip link show'?",
  "answer": "11"
},




    {
      "id": "linux_assign_static_ip",
      "type": "basic",
      "question": "How do you assign a static IP to a network interface in Linux?",
      "answer": "Use the command `ip addr add [IP]/[CIDR] dev [interface]`, e.g., `ip addr add 192.168.1.100/24 dev eth0`. Note that this change is temporary and will be lost after a reboot."
    },
    {
      "id": "linux_static_ip_persistent_ubuntu",
      "type": "basic",
      "question": "How do you configure a persistent static IP in Ubuntu?",
      "answer": "In Ubuntu, you can configure a persistent static IP by editing the Netplan configuration file (e.g., `/etc/netplan/01-netcfg.yaml`). Add the following content:\n\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    eth0:\n      dhcp4: no\n      addresses:\n        - 192.168.1.100/24\n      gateway4: 192.168.1.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n\nAfter editing, apply the changes using the command `sudo netplan apply`. To apply this config without reboot, use `sudo netplan apply`. This configuration is specific to Ubuntu and some other Debian-based distributions."
    },
    {
      "id": "linux_netplan_apply_restart",
      "type": "basic",
      "question": "What is the purpose of the `sudo netplan apply` command?",
      "answer": "The `sudo netplan apply` command applies changes made to Netplan configuration files. It ensures the network settings defined in YAML files take effect without requiring a system reboot."
    },
    {
      "id": "linux_static_ip_persistent_redhat",
      "type": "basic",
      "question": "How do you configure a persistent static IP in Red Hat-based distributions?",
      "answer": "In Red Hat-based distributions (e.g., Fedora, CentOS), you can configure a persistent static IP by editing the interface configuration file located in `/etc/sysconfig/network-scripts/`. For example, for the `eth0` interface, edit the file `/etc/sysconfig/network-scripts/ifcfg-eth0` and add:\n\nBOOTPROTO=none\nIPADDR=192.168.1.100\nPREFIX=24\nGATEWAY=192.168.1.1\nDNS1=8.8.8.8\nNAME=eth0\nDEVICE=eth0\nONBOOT=yes\n\nThen restart the network service using `sudo systemctl restart network` or `nmcli` commands. This method is specific to Red Hat-based distributions."
    },
    {
      "id": "linux_static_ip_persistent_redhat",
      "type": "basic",
      "question": "How do you configure a persistent static IP in Red Hat-based distributions?",
      "answer": "Starting with Fedora 33 and RHEL 9, network configuration files are no longer stored in `/etc/sysconfig/network-scripts/`. Instead, the preferred method is to use the nmcli utility. The new NetworkManager keyfiles are located in `/etc/NetworkManager/system-connections/`. For example, to configure a static IP using nmcli, use the following command:\n\n`sudo nmcli connection modify 'Wired connection 1' ipv4.method manual ipv4.addresses 192.168.1.100/24 ipv4.gateway 192.168.1.1 ipv4.dns 8.8.8.8 connection.autoconnect yes`\n\nAfter modifying the connection, restart it using:\n\n`sudo nmcli connection up 'Wired connection 1'`\n\nThis is the recommended method for configuring network settings in modern Fedora and RHEL systems."
    },
    {
      "id": "nmcli_dynamic_ip_configuration",
      "type": "basic",
      "question": "How do you configure a dynamic IP address using nmcli?",
      "answer": "To configure a dynamic IP address using nmcli, use the command:\n\n`sudo nmcli connection modify 'Wired connection 1' ipv4.method auto`\n\nThis enables DHCP for the specified connection. You can verify the change by checking the keyfile in `/etc/NetworkManager/system-connections/`."
    },
    {
      "id": "nmcli_view_connections",
      "type": "basic",
      "question": "How do you view information about active network connections using nmcli?",
      "answer": "Use the command `nmcli connection show` to view details about active network connections, including the name, UUID, type, and device used."
    },
    {
      "id": "nmcli_keyfiles_location",
      "type": "basic",
      "question": "Where are the new NetworkManager keyfiles stored in Fedora and RHEL?",
      "answer": "The new NetworkManager keyfiles are stored in `/etc/NetworkManager/system-connections/`. These keyfiles are used to store network configuration details for connections managed by NetworkManager."
    },
    {
      "id": "linux_network_manager_name",
      "type": "basic",
      "question": "If access to the NetworkManager in Linux fails - what could be the problem?",
      "answer": "Depending on the distro the service might have a slightly different name (a common variant is `network-manager`), search for it using `sudo systemctl list-units --type=service | grep -i network`."
    },
    {
      "id": "linux_network_manager",
      "type": "basic",
      "question": "What is the NetworkManager and what are its repsonsibilities?",
      "answer": "The Linux Network Manager is a system service designed to simplify and manage network configurations by abstracting lower level config. Its responsibilities include: configuration of wired and wireless nics based on static and dynamic ip configs. Management and priorization of network connections. Seamlessly switch between networks (for instance when a cable is connected) / scan for wireless networks and connecting with protocols like WPA / configure dns / briging, tunneling, configuring proxys / provide information to various tools (e.g. nmcli) or graphical tools of Linux desktops"
    },
    {
      "id": "linux_start_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you start it?",
      "answer": "sudo sysctl start NetworkManager"
    },
    {
      "id": "linux_stop_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you stop it?",
      "answer": "sudo sysctl stop NetworkManager"
    },
    {
      "id": "linux_enable_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you ensure it starts at boot time?",
      "answer": "sudo sysctl enable NetworkManager"
    },
    {
      "id": "linux_disable_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you prevent it from starting boot time?",
      "answer": "sudo sysctl disable NetworkManager"
    },
    {
      "id": "linux_status_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you check the status?",
      "answer": "sudo sysctl status NetworkManager"
    },
    {
      "id": "linux_restart_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you restart it?",
      "answer": "sudo sysctl restart NetworkManager"
    },
    {
      "id": "linux_logs_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you check its logs?",
      "answer": "sudo journalctl -u NetworkManager"
    },
    {
      "id": "linux_interface_state",
      "type": "basic",
      "question": "How do you change the state of a network interface (e.g., bring it up or down)?",
      "answer": "To bring a network interface up, use the command `sudo ip link set [interface] up`. To bring it down, use `sudo ip link set [interface] down`. Replace `[interface]` with the name of your network interface (e.g., `enp0s25`)."
    },
    {
      "id": "linux_ip_addr_show",
      "type": "basic",
      "question": "What can you learn from the `ip addr show` command?",
      "answer": "The `ip addr show` command displays detailed information about network interfaces, including:\n- Interface name and state (e.g., `enp0s25` and `DOWN`)\n- Flags indicating the interface's capabilities (e.g., `BROADCAST`, `MULTICAST`, `UP`)\n- MTU (Maximum Transmission Unit)\n- IP addresses assigned to the interface\n- Qdisc (queuing discipline) settings\n- MAC address."
    },
    {
      "id": "linux_naming_interfaces",
      "type": "basic",
      "question": "How can you give a network interface a human-readable name?",
      "answer": "You can create a human-readable name for a network interface using the `ip link set` command. For example, `sudo ip link set [interface] alias \"Wireless Network\"` assigns the alias 'Wireless Network' to the specified interface."
    },
    {
      "id": "linux_routing_conflict",
      "type": "basic",
      "question": "How do you resolve a routing conflict, such as ensuring HTTP traffic uses a specific connection?",
      "answer": "To resolve a routing conflict, you can adjust the routing table using the `ip route` command. For example, if your LAN connection lacks internet access but your WLAN does, you can ensure HTTP traffic uses WLAN by setting a default route with a higher priority for the WLAN interface:\n\n`sudo ip route add default via [gateway_IP] dev [wlan_interface] metric 100`\n\nReplace `[gateway_IP]` with the WLAN gateway's IP and `[wlan_interface]` with the interface name. The `metric` value determines priority, with lower numbers having higher precedence."
    },
    {
      "id": "dmesg_network_troubleshooting",
      "type": "basic",
      "question": "How can you use `dmesg` logs to troubleshoot networking hardware issues?",
      "answer": "Use the `dmesg` command to check kernel logs for hardware-related issues. Look for messages about network interfaces (e.g., `eth0`, `wlan0`) indicating driver problems, hardware failures, or firmware errors. Combine it with `grep`, e.g., `dmesg | grep eth0`."
    },
    {
      "id": "nmcli_wifi_list",
      "type": "basic",
      "question": "What command lists all available wireless networks in a colorful terminal output?",
      "answer": "The `nmcli dev wifi list` command lists all available wireless networks in a detailed, colorful output. It shows SSID, signal strength, security protocols, and more."
    },
    {
      "id": "nmcli_wifi_connect",
      "type": "basic",
      "question": "How do you connect to a wireless network using a WPA key in Linux?",
      "answer": "Use the `nmcli` command: `nmcli dev wifi connect [SSID] password [WPA_KEY]`. Replace `[SSID]` with the network name and `[WPA_KEY]` with the router's WPA password."
    },
    {
      "id": "wifi_encryption_standards",
      "type": "basic",
      "question": "What are the common Wi-Fi encryption standards, and how do they differ?",
      "answer": "Common Wi-Fi encryption standards include:\n- **WEP**: Weak and outdated.\n- **WPA**: Stronger than WEP but vulnerable to attacks.\n- **WPA2**: Standard for modern networks, secure with AES encryption.\n- **WPA3**: Latest standard, offering enhanced security features."
    },
    {
      "id": "wifi_reset_connection",
      "type": "basic",
      "question": "How do you reset a wireless connection in Linux?",
      "answer": "Restart the interface: `sudo ip link set [wlan_interface] down && sudo ip link set [wlan_interface] up`. You can also reconnect using NetworkManager: `nmcli dev wifi rescan` and `nmcli dev wifi connect [SSID]`."
    },
    {
      "id": "networking_cidr",
      "type": "basic",
      "question": "What is CIDR?",
      "answer": "CIDR (Classless Inter-Domain Routing) is a method for IP address allocation and routing. It uses a prefix length (e.g., /24) to define the division between the network and host portions of an IP address, allowing flexible and efficient IP address use."
    },
    {
      "id": "linux_troubleshoot_connectivity",
      "type": "multiple-choice",
      "question": "What steps can you take to troubleshoot connectivity issues in Linux?",
      "choices": [
        { "text": "Ping the default gateway", "correct": true, "explanation": "This checks if the network connection to the gateway is functional." },
        { "text": "Check DNS configuration", "correct": true, "explanation": "Incorrect DNS settings can cause connectivity issues." },
        { "text": "Restart the network interface", "correct": true, "explanation": "This can resolve temporary network interface issues." },
        { "text": "Restart NetworkManager", "correct": true, "explanation": "Restarting NetworkManager can apply new configurations or resolve connectivity issues." },
        { "text": "Reinstall Linux", "correct": false, "explanation": "This is not a typical troubleshooting step for network issues." },
        { "text": "Disable the firewall permanently", "correct": false, "explanation": "Disabling the firewall can expose the system to security risks and is not a recommended troubleshooting step." },
        { "text": "Run a network speed test", "correct": false, "explanation": "While useful for performance checks, this does not directly help with connectivity troubleshooting." }
      ]
    },
    {
      "id": "network_scan_devices",
      "type": "basic",
      "question": "What command can you use to scan for devices on a network?",
      "answer": "Use the `nmap` command, e.g., `nmap -sn 192.168.1.0/24` to perform a ping scan of the network."
    },
    {
      "id": "network_router_config",
      "type": "basic",
      "question": "How do you access and configure a router?",
      "answer": "Access the router's web interface via its IP address (e.g., 192.168.1.1) in a web browser, and log in using the admin credentials to configure settings like DHCP, static IPs, and port forwarding."
    },
    {
      "id": "wireless_network_analysis",
      "type": "basic",
      "question": "What tools can you use to analyze wireless networks?",
      "answer": "Tools like `iwconfig`, `nmcli`, or GUI tools such as Wireshark can be used to analyze wireless networks in Linux."
    },
    {
      "id": "recipe_troubleshooting",
      "type": "basic",
      "question": "What is the step-by-step process to troubleshoot a connectivity issue?",
      "answer": "1. Check physical connections. 2. Verify the network interface state (`ip link show`). 3. Check IP configuration (`ip addr show`). 4. Ping the default gateway. 5. Check DNS settings. 6. Restart the network interface if needed. 7. Check logs with `journalctl -u NetworkManager`."
    },
    {
      "id": "linux_network_manager_overview",
      "type": "basic",
      "question": "What is NetworkManager, and what are its responsibilities?",
      "answer": "NetworkManager is a network management tool that automates network configuration and management. It is responsible for managing network interfaces, establishing connections (wired, wireless, or VPN), handling DNS configuration, and applying user-defined settings. It simplifies networking tasks on Linux systems."
    },

    {
      "id": "netplan_permissions_warning",
      "type": "basic",
      "question": "Why does Netplan warn about permissions being too open for configuration files?",
      "answer": "Netplan requires its configuration files to be readable only by root for security reasons. If the permissions are too open, it triggers warnings. Use `sudo chmod 600 /etc/netplan/<file>.yaml` to fix the permissions."
    },
    {
      "id": "netplan_gateway4_deprecation",
      "type": "basic",
      "question": "Why does Netplan warn about the deprecation of `gateway4`?",
      "answer": "The `gateway4` directive has been deprecated in favor of using default routes. Replace `gateway4` with:/n/nroutes:/n  - to: 0.0.0.0/0/n    via: [gateway_IP]/n/nThis aligns with updated Netplan configurations."
    },
    {
      "id": "ping_failure_analysis",
      "type": "basic",
      "question": "What could cause a `Destination Host Unreachable` error when pinging an IP address?",
      "answer": "A `Destination Host Unreachable` error indicates no route to the target. Possible causes include:/n1. The target device is on a different subnet and no route exists./n2. The target device has an incorrect IP configuration or is not powered on./n3. The network interface on your device is not correctly configured./n4. The routing table may need verification using `ip route show` to ensure a valid route exists./n5. Use `traceroute [IP]` to trace the path and identify where the connection fails."
    },
    {
      "id": "netplan_config_example",
      "type": "basic",
      "question": "How do you configure a Netplan YAML file with default routes instead of `gateway4`?",
      "answer": "Example configuration:/n/nnetwork:/n  version: 2/n  ethernets:/n    enp2s0:/n      addresses:/n        - 192.168.1.10/24/n      routes:/n        - to: 0.0.0.0/0/n          via: 192.168.1.1/n/nApply the configuration using `sudo netplan apply`."
    },
    {
      "id": "ping_link_local",
      "type": "basic",
      "question": "What is a link-local address, and why might it fail to communicate with devices on a different subnet?",
      "answer": "A link-local address (e.g., 169.254.x.x) is auto-assigned when no DHCP server is available. Devices with link-local addresses can communicate only if they are on the same subnet and link-local range."
    },
    {
      "id": "subnet_change_example",
      "type": "basic",
      "question": "How do you temporarily change a device's IP to match a link-local subnet?",
      "answer": "Use Netplan or `ip addr` to temporarily change the IP to match the subnet of the target device. Example:/n/n`sudo ip addr add 169.254.100.1/24 dev enp2s0`/n/nThis allows communication with devices on the same link-local subnet."
    },
    {
      "id": "network_static_ip_debugging",
      "type": "basic",
      "question": "What steps can you take to troubleshoot static IP issues?",
      "answer": "1. Check Netplan YAML syntax./n2. Verify file permissions (`sudo chmod 600`)./n3. Use `ip addr show` to confirm the interface IP./n4. Verify the routing table with `ip route show`./n5. Ensure the target device is in the same subnet."
    },
    {
      "id": "ip_addr_show_fields",
      "type": "basic",
      "question": "What information can you derive from the output of `ip addr show`?",
      "answer": "The `ip addr show` command provides:/n- Interface name and state (e.g., `enp2s0` and `UP`)./n- Flags like `BROADCAST`, `MULTICAST`, `UP`, `LOWER_UP`./n- MTU (Maximum Transmission Unit) and queueing discipline (e.g., `fq_codel`)./n- Assigned IPv4 and IPv6 addresses (e.g., `inet` and `inet6`)./n- Broadcast and link-local addresses."
    },
    {
      "id": "ip_route_show_analysis",
      "type": "basic",
      "question": "What does the `ip route show` command reveal about network routing?",
      "answer": "The `ip route show` command reveals:/n- Default routes for external traffic./n- Routes to specific subnets or devices./n- Metrics for route priority (lower is preferred)./n- Interfaces used for specific routes./n- Kernel auto-added routes (proto kernel)."
    },
    {
      "id": "ssh_connection_outdated_encryption",
      "type": "basic",
      "question": "What might cause an SSH connection to fail with an older device?",
      "answer": "SSH connections can fail due to outdated encryption mechanisms on older devices. Update your SSH client configuration to include legacy ciphers or key exchange algorithms if necessary. Example: Add `-oKexAlgorithms=+diffie-hellman-group1-sha1` to your SSH command."
    },
{
      "id": "dns_resolvconf_overview",
      "type": "basic",
      "question": "What is resolvconf and what is its purpose?",
      "answer": "`resolvconf` is a utility used to manage the contents of the `/etc/resolv.conf` file dynamically. It handles DNS configuration for multiple programs or network interfaces, updating the file as interfaces come up or go down."
    },
    {
      "id": "dns_systemd_resolved_overview",
      "type": "basic",
      "question": "What is systemd-resolved and what does it do?",
      "answer": "`systemd-resolved` is a system service that provides network name resolution for local applications. It integrates with DNS, LLMNR (Link-Local Multicast Name Resolution), and MDNS (Multicast DNS) to resolve hostnames. It also manages the `/etc/resolv.conf` file."
    },
    {
      "id": "resolvconf_vs_systemd_resolved",
      "type": "basic",
      "question": "How does `resolvconf` differ from `systemd-resolved`?",
      "answer": "`resolvconf` is a lightweight utility for managing DNS configurations, while `systemd-resolved` is part of the `systemd` suite and provides a broader set of features like LLMNR and MDNS support. Modern distributions often use `systemd-resolved` as the default."
    },
    {
      "id": "dns_systemd_resolved_configuration",
      "type": "basic",
      "question": "How do you configure `systemd-resolved` for DNS resolution?",
      "answer": "To configure `systemd-resolved`, edit the `/etc/systemd/resolved.conf` file. Example configuration:/n/n[Resolve]/nDNS=8.8.8.8 8.8.4.4/nDomains=example.com/n/nAfter editing, restart the service with `sudo systemctl restart systemd-resolved`."
    },
    {
      "id": "resolvconf_update_dns",
      "type": "basic",
      "question": "How do you update DNS entries using `resolvconf`?",
      "answer": "To update DNS entries using `resolvconf`, modify the relevant interface configuration file (e.g., `/etc/network/interfaces`) to include DNS settings, such as:/n/niface eth0 inet static/n    address 192.168.1.100/n    netmask 255.255.255.0/n    dns-nameservers 8.8.8.8 8.8.4.4/n/nRestart the networking service or reconfigure the interface to apply the changes."
    },
    {
      "id": "dns_check_effective_configuration",
      "type": "basic",
      "question": "How can you check the effective DNS configuration on a system?",
      "answer": "To check the effective DNS configuration:/n- If using `resolvconf`, view the `/etc/resolv.conf` file directly./n- If using `systemd-resolved`, use `resolvectl status` or `systemd-resolve --status` to see detailed information about DNS settings."
    },
    {
      "id": "nmcli_connect_wifi",
      "type": "basic",
      "question": "How do you connect to a Wi-Fi network using `nmcli`?",
      "answer": "Use the following command to connect to a Wi-Fi network:/n`nmcli dev wifi connect [SSID] password [WPA_KEY]`/nReplace `[SSID]` with the network name and `[WPA_KEY]` with the Wi-Fi password."
    },
    {
      "id": "nmcli_show_active_connections",
      "type": "basic",
      "question": "How can you display active network connections using `nmcli`?",
      "answer": "Run the command `nmcli connection show --active` to list all currently active network connections, including their UUIDs, types, and device names."
    },
    {
      "id": "nmcli_create_static_ip",
      "type": "basic",
      "question": "How do you set up a static IP address using `nmcli`?",
      "answer": "Use the following command to create a connection with a static IP:/n`nmcli connection add type ethernet ifname [interface] con-name [name] ip4 [IP_ADDRESS]/[CIDR] gw4 [GATEWAY]`/nReplace `[interface]`, `[name]`, `[IP_ADDRESS]`, and `[GATEWAY]` with the appropriate values."
    },
    {
      "id": "nmcli_disconnect_device",
      "type": "basic",
      "question": "How can you disconnect a network device using `nmcli`?",
      "answer": "To disconnect a network device, use the command `nmcli device disconnect [DEVICE]`. Replace `[DEVICE]` with the name of the network interface you want to disconnect."
    },
    {
      "id": "nmcli_rescan_wifi",
      "type": "basic",
      "question": "How do you rescan for available Wi-Fi networks using `nmcli`?",
      "answer": "Run the command `nmcli device wifi rescan` to rescan for available Wi-Fi networks. Afterward, use `nmcli device wifi list` to display the updated list of networks."
    },
    {
      "id": "systemd_networkd_overview",
      "type": "basic",
      "question": "What is systemd-networkd and what is its purpose?",
      "answer": "`systemd-networkd` is a system service that manages network configurations for Linux systems. It handles static and dynamic IP configurations, routes, VLANs, bridges, and other networking settings."
    },
    {
      "id": "systemd_networkd_configuration",
      "type": "basic",
      "question": "How do you configure network settings using systemd-networkd?",
      "answer": "Create a `.network` file in `/etc/systemd/network/`. Example configuration:/n/n[Match]/nName=eth0/n/n[Network]/nAddress=192.168.1.100/24/nGateway=192.168.1.1/nDNS=8.8.8.8 8.8.4.4/n/nThen restart the service with `sudo systemctl restart systemd-networkd`."
    },
    {
      "id": "etc_network_interfaces_configuration",
      "type": "basic",
      "question": "How do you configure networking in `/etc/network/interfaces`?",
      "answer": "Edit `/etc/network/interfaces` to configure networking. Example:/n/niface eth0 inet static/n    address 192.168.1.100/n    netmask 255.255.255.0/n    gateway 192.168.1.1/n    dns-nameservers 8.8.8.8 8.8.4.4/n/nRestart networking with `sudo systemctl restart networking`."
    },
    {
      "id": "etc_netplan_configuration",
      "type": "basic",
      "question": "How do you configure networking using Netplan?",
      "answer": "Edit the YAML configuration file in `/etc/netplan/`. Example:/n/nnetwork:/n  version: 2/n  ethernets:/n    eth0:/n      addresses:/n        - 192.168.1.100/24/n      gateway4: 192.168.1.1/n      nameservers:/n        addresses:/n          - 8.8.8.8/n          - 8.8.4.4/n/nApply changes with `sudo netplan apply`."
    },
    {
      "id": "netplan_installer_config",
      "type": "basic",
      "question": "What is the purpose of the /etc/netplan/00-installer-config.yaml file?",
      "answer": "The /etc/netplan/00-installer-config.yaml file is a default configuration file used by Netplan on Ubuntu systems to define network settings. It typically contains settings for interfaces, IP addresses, gateways, and DNS. Changes to this file require running 'sudo netplan apply' to take effect."
    },
    {
      "id": "opensuse_wicked_overview",
      "type": "basic",
      "question": "What is Wicked in openSUSE?",
      "answer": "Wicked is openSUSE's native network management service, used for configuring and managing network connections. It is often used for static configurations on servers."
    },
    {
      "id": "opensuse_wicked_commands",
      "type": "basic",
      "question": "What are some common Wicked commands in openSUSE?",
      "answer": "- `wicked show all`: Displays the current network status.\n- `wicked ifup [interface]`: Brings an interface up.\n- `wicked ifdown [interface]`: Brings an interface down."
    },
    {
      "id": "opensuse_networkmanager_overview",
      "type": "basic",
      "question": "Does openSUSE support NetworkManager?",
      "answer": "Yes, openSUSE supports NetworkManager, which is commonly used in desktop environments for dynamic network management. Tools like `nmcli` and `nmtui` can be used to manage NetworkManager connections."
    },
    {
      "id": "opensuse_nmcli_dynamic_ip",
      "type": "basic",
      "question": "How do you configure a dynamic IP address in openSUSE using NetworkManager?",
      "answer": "Use the following command: \n`sudo nmcli connection modify 'Wired connection 1' ipv4.method auto` \nThis enables DHCP for the specified connection."
    },
    {
      "id": "opensuse_nmcli_static_ip",
      "type": "basic",
      "question": "How do you configure a static IP address in openSUSE using NetworkManager?",
      "answer": "Use the following command: \n`sudo nmcli connection modify 'Wired connection 1' ipv4.method manual ipv4.addresses 192.168.1.100/24 ipv4.gateway 192.168.1.1 ipv4.dns 8.8.8.8 connection.autoconnect yes` \nThen apply the changes using: \n`sudo nmcli connection up 'Wired connection 1'`."
    },
    {
      "id": "hostnamectl_overview",
      "type": "basic",
      "question": "What is the `hostnamectl` command used for?",
      "answer": "The `hostnamectl` command is used to view and modify the system's hostname and related settings."
    },
    {
      "id": "hostnamectl_view_hostname",
      "type": "basic",
      "question": "How do you view the current hostname using `hostnamectl`?",
      "answer": "Run the command `hostnamectl status` to view the current hostname and related metadata."
    },
    {
      "id": "hostnamectl_set_hostname",
      "type": "basic",
      "question": "How do you set a new hostname using `hostnamectl`?",
      "answer": "Use the command `sudo hostnamectl set-hostname [new-hostname]` to set a new static hostname. Replace `[new-hostname]` with the desired name."
    },
    {
      "id": "ports_definition",
      "type": "basic",
      "question": "What is a network port?",
      "answer": "A network port is a logical endpoint for communication, identified by a number (e.g., 80 for HTTP or 22 for SSH), that allows network services to differentiate traffic."
    },
    {
      "id": "sockets_definition",
      "type": "basic",
      "question": "What is a socket in networking?",
      "answer": "A socket is an endpoint for communication between two devices over a network. It consists of an IP address and a port number, enabling applications to send and receive data."
    },
    {
      "id": "common_ports_examples",
      "type": "basic",
      "question": "What are some common network ports and their purposes?",
      "answer": "- 80: HTTP (web traffic)\n- 443: HTTPS (secure web traffic)\n- 22: SSH (remote login)\n- 25: SMTP (email sending)\n- 53: DNS (domain name resolution)\n- 3306: MySQL (database communication)"
    },
    {
      "id": "dnsutils_package_overview",
      "type": "basic",
      "question": "What is the dnsutils package used for?",
      "answer": "The dnsutils package provides tools for querying and managing DNS, including commands like `dig` and `nslookup`."
    },
    {
      "id": "dig_overview",
      "type": "basic",
      "question": "What is the purpose of the `dig` command?",
      "answer": "The `dig` command is used to query DNS servers for information about domains, such as IP addresses, mail servers, and other DNS records."
    },
    {
      "id": "dig_a_record_query",
      "type": "basic",
      "question": "How do you use `dig` to retrieve the A record of a domain?",
      "answer": "Use the command `dig [domain-name]`, e.g., `dig example.com`, to retrieve the A record (IPv4 address) of the specified domain."
    },
    {
      "id": "dig_specific_dns_server",
      "type": "basic",
      "question": "How do you query a specific DNS server using `dig`?",
      "answer": "Use the `@` symbol followed by the DNS server's IP address, e.g., `dig @8.8.8.8 example.com`."
    },
    {
      "id": "dig_query_dns_record_types",
      "type": "basic",
      "question": "How do you query specific DNS record types using `dig`?",
      "answer": "Use the command `dig [domain-name] [record-type]`, e.g., `dig example.com MX` to query the MX (mail exchange) records."
    }

  ],
  "tags": ["networking", "linux", "commands"]
}
