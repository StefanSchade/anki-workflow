{
  "cards":  [
    {
      "id": "lan_definition",
      "type": "basic",
      "question": "What is a LAN?",
      "answer": "A LAN (Local Area Network) is a group of interconnected devices located in a single physical location. Its range can vary from small (e.g., a private residence) to large (e.g., an enterprise campus), but it is limited by its physical boundaries."
    },
    {
      "id": "wan_definition",
      "type": "basic",
      "question": "What is a WAN?",
      "answer": "A WAN (Wide Area Network) is a network of networks, consisting of multiple distributed LANs communicating with each other. The internet is the largest WAN, but the private network of a multinational corporation is also considered a WAN."
    },
    {
      "id": "pan_definition",
      "type": "basic",
      "question": "What is a PAN?",
      "answer": "A PAN (Personal Area Network) is a specialized type of LAN formed by personal devices interconnected using short-range technologies like Bluetooth, USB, or Infrared. It is typically used for personal communication between devices within a few meters."
    },
    {
      "id": "man_definition",
      "type": "basic",
      "question": "What is a MAN?",
      "answer": "A MAN (Metropolitan Area Network) spans a city or urban area, often implemented with high-speed technologies such as fiber optics. MANs are typically larger than LANs but smaller than WANs."
    },
    {
      "id": "ian_definition",
      "type": "basic",
      "question": "What is an IAN?",
      "answer": "An IAN (Internet Area Network), as referenced by Balog in Mastering Linux Administration, is not a widely recognized or generally defined term and should be avoided in most contexts to prevent confusion."
    },
    {
      "id": "vlan_definition",
      "type": "basic",
      "question": "What is a VLAN?",
      "answer": "A VLAN (Virtual Local Area Network) is a logical segmentation of a LAN into separate virtual networks. It can group devices logically regardless of their physical location, improving security, performance, and manageability. VLANs are created using network switches and routers, utilizing tagging protocols like IEEE 802.1Q."
    },
    {
      "id": "osi_model_overview",
      "type": "basic",
      "question": "What is the OSI model?",
      "answer": "The OSI (Open Systems Interconnection) model is a conceptual framework with 7 layers (Physical, Data Link, Network, Transport, Session, Presentation, Application) used to standardize and understand how data is transmitted across networks."
    },
    {
      "id": "osi_physical_layer",
      "type": "basic",
      "question": "What is the role of the Physical layer in the OSI model?",
      "answer": "The Physical layer (Layer 1) is responsible for the transmission of raw binary data over physical mediums like cables, fiber optics, or radio waves."
    },
    {
      "id": "osi_data_link_layer",
      "type": "basic",
      "question": "What does the Data Link layer do in the OSI model?",
      "answer": "The Data Link layer (Layer 2) ensures reliable data transfer across a physical link, handles MAC addresses, and defines protocols for error detection and flow control."
    },
    {
      "id": "osi_network_layer",
      "type": "basic",
      "question": "What is the purpose of the Network layer in the OSI model?",
      "answer": "The Network layer (Layer 3) is responsible for routing and forwarding data, and defines logical addressing (e.g., IP addresses)."
    },
    {
      "id": "osi_transport_layer",
      "type": "basic",
      "question": "What is the role of the Transport layer in the OSI model?",
      "answer": "The Transport layer (Layer 4) manages end-to-end communication, error checking, and flow control, using protocols like TCP and UDP."
    },
    {
      "id": "osi_session_layer",
      "type": "basic",
      "question": "What does the Session layer do in the OSI model?",
      "answer": "The Session layer (Layer 5) establishes, manages, and terminates sessions between applications on different devices."
    },
    {
      "id": "osi_presentation_layer",
      "type": "basic",
      "question": "What is the purpose of the Presentation layer in the OSI model?",
      "answer": "The Presentation layer (Layer 6) translates data formats, encrypts/decrypts information, and ensures data compatibility between systems."
    },
    {
      "id": "osi_application_layer",
      "type": "basic",
      "question": "What is the role of the Application layer in the OSI model?",
      "answer": "The Application layer (Layer 7) provides network services directly to user applications, such as web browsing (HTTP), email (SMTP), and file transfer (FTP)."
    },
    {
      "id": "dns_protocol_overview",
      "type": "basic",
      "question": "What is the DNS protocol?",
      "answer": "The DNS (Domain Name System) protocol translates human-readable domain names into IP addresses, allowing devices to locate each other on a network. DNS operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "http_protocol_overview",
      "type": "basic",
      "question": "What is the HTTP protocol?",
      "answer": "HTTP (Hypertext Transfer Protocol) is a stateless protocol used for transferring web resources, such as HTML files, images, and videos. HTTP operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "ftp_protocol_overview",
      "type": "basic",
      "question": "What is the FTP protocol?",
      "answer": "FTP (File Transfer Protocol) is a standard protocol for transferring files between a client and a server. FTP operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "smtp_protocol_overview",
      "type": "basic",
      "question": "What is the SMTP protocol?",
      "answer": "SMTP (Simple Mail Transfer Protocol) is a protocol for sending and receiving emails. It supports encryption and host authentication, and it operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "arp_protocol_overview",
      "type": "basic",
      "question": "What is the ARP protocol?",
      "answer": "ARP (Address Resolution Protocol) maps IP addresses to MAC addresses for communication within a local network. It operates at the Data Link layer (Layer 2) in the OSI model."
    },
    {
      "id": "ndp_protocol_overview",
      "type": "basic",
      "question": "What is the NDP protocol?",
      "answer": "NDP (Neighbor Discovery Protocol) is similar to ARP but designed for IPv6. It maps IPv6 addresses to MAC addresses and operates at the Data Link layer (Layer 2) in the OSI model."
    },
    {
      "id": "tcp_protocol_overview",
      "type": "basic",
      "question": "What is the TCP protocol?",
      "answer": "TCP (Transmission Control Protocol) is a connection-oriented protocol that ensures reliable data delivery through error checking and retransmissions. TCP operates at the Transport layer (Layer 4) in the OSI model."
    },
    {
      "id": "udp_protocol_overview",
      "type": "basic",
      "question": "What is the UDP protocol?",
      "answer": "UDP (User Datagram Protocol) is a connectionless protocol that offers low-latency communication without error checking. It operates at the Transport layer (Layer 4) in the OSI model."
    },
    {
      "id": "dhcp_protocol_overview",
      "type": "basic",
      "question": "What is the DHCP protocol?",
      "answer": "DHCP (Dynamic Host Configuration Protocol) dynamically assigns IP addresses and other network configuration details to devices on a network. DHCP operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "icmp_protocol_overview",
      "type": "basic",
      "question": "What is ICMP?",
      "answer": "ICMP (Internet Control Message Protocol) reports errors and diagnostic information, commonly used by tools like ping. It operates at the Network layer (Layer 3) in the OSI model."
    },
    {
      "id": "ntp_protocol_overview",
      "type": "basic",
      "question": "What is the NTP protocol?",
      "answer": "NTP (Network Time Protocol) synchronizes system clocks across networks, ensuring accurate timekeeping. It operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "snmp_protocol_overview",
      "type": "basic",
      "question": "What is the SNMP protocol?",
      "answer": "SNMP (Simple Network Management Protocol) allows remote monitoring and management of network devices. It operates at the Application layer (Layer 7) in the OSI model."
    },
    {
      "id": "ssh_protocol_overview",
      "type": "basic",
      "question": "What is the SSH protocol?",
      "answer": "SSH (Secure Shell) provides encrypted communication for secure remote access and file transfers. It operates at the Application layer (Layer 7) in the OSI model."
    },
  {
      "id": "osi_encapsulation_process",
      "type": "basic",
      "question": "What happens during the encapsulation process in the OSI model?",
      "answer": "In encapsulation, data passes from the Application layer (Layer 7) to the Physical layer (Layer 1). Each layer adds its own header: Layer 4 (Transport) adds a TCP/UDP header, Layer 3 (Network) adds an IP header, Layer 2 (Data Link) adds a MAC header and FCS, and Layer 1 transmits the raw bits."
    },
    {
      "id": "osi_decapsulation_process",
      "type": "basic",
      "question": "What happens during the decapsulation process in the OSI model?",
      "answer": "In decapsulation, data is received at the Physical layer (Layer 1) and passed to the Application layer (Layer 7). Each layer removes its corresponding header: Layer 2 verifies the FCS, Layer 3 processes the IP header, and Layer 4 reassembles the data."
    },
    {
      "id": "osi_tcpip_relationship",
      "type": "basic",
      "question": "How do the OSI model and the TCP/IP model relate?",
      "answer": "The OSI model has 7 layers, while the TCP/IP model has 4 layers. The OSI Application, Presentation, and Session layers map to the TCP/IP Application layer. The OSI Transport layer corresponds to the TCP/IP Transport layer. The OSI Network layer maps to the TCP/IP Internet layer, and the OSI Data Link and Physical layers correspond to the TCP/IP Network Access layer."
    },
    {
      "id": "ethernet_frames_overview",
      "type": "basic",
      "question": "What is an Ethernet frame?",
      "answer": "An Ethernet frame is a data packet format used in Ethernet networks. It contains fields like the destination MAC address, source MAC address, EtherType, payload (data), and a Frame Check Sequence (FCS) for error detection."
    },
    {
      "id": "ethernet_frame_structure",
      "type": "basic",
      "question": "What are the main fields in an Ethernet frame?",
      "answer": "An Ethernet frame contains: Destination MAC address, Source MAC address, EtherType, Payload (data), and Frame Check Sequence (FCS) for error detection."
    },
    {
      "id": "snap_protocol_overview",
      "type": "basic",
      "question": "What is the 802.3 SubNetwork Access Protocol (SNAP)?",
      "answer": "The 802.3 SubNetwork Access Protocol (SNAP) is a protocol used in Ethernet frames to extend the EtherType field, enabling support for additional protocols beyond those defined by IEEE 802.3."
    },
    {
      "id": "snap_protocol_use_case",
      "type": "basic",
      "question": "Why is the 802.3 SNAP protocol important?",
      "answer": "The 802.3 SNAP protocol allows Ethernet frames to support non-standard or proprietary protocols by extending the EtherType field."
    },
    {
      "id": "icmp_overview",
      "type": "basic",
      "question": "What is ICMP (Internet Control Message Protocol)?",
      "answer": "ICMP is a network protocol used for diagnostic and error-reporting purposes. It is commonly used by tools like ping and traceroute to check connectivity and troubleshoot network issues."
    },
    {
      "id": "data_segments",
      "type": "basic",
      "question": "What are data segments in networking?",
      "answer": "Data segments are units of data used in the Transport layer (OSI Layer 4). They include the application data along with transport layer headers, such as TCP or UDP headers."
    },
    {
      "id": "network_datagrams",
      "type": "basic",
      "question": "What are datagrams in networking?",
      "answer": "Datagrams are units of data used in the Network layer (OSI Layer 3). They consist of data segments from the Transport layer with an added IP header for routing purposes."
    },
    {
      "id": "networking_ipv4_ipv6",
      "type": "basic",
      "question": "What are IPv4 and IPv6 addresses and what is their difference?",
      "answer": "IPv4 addresses are 32-bit addresses represented in decimal format (e.g., 192.168.1.1), while IPv6 addresses are 128-bit addresses represented in hexadecimal format (e.g., 2001:0db8:85a3:0000:0000:8a2e:0370:7334). That IPv6 provides a much larger address space was the reason for the introduction of the new standard. IPv4 is still widely used as NAT (Network Address Translation), a technique used to modify IP addresses in packet headers as they move through a router or firewall enables private networks to share a single public IP address."
    },
    {
      "id": "networking_subnet_mask",
      "type": "basic",
      "question": "What is a subnet mask?",
      "answer": "A subnet mask is a 32-bit number used in IPv4 to divide an IP address into network and host portions. It determines the range of IP addresses within a subnet. For example, 255.255.255.0 indicates a subnet with 256 possible addresses."
    },
    {
      "id": "networking_subnet_mask_nat",
      "type": "basic",
      "question": "How do the concepts of nat and subnetmasks relate to each other?",
      "answer": "subnetmask: deals with logical segmentation of the internal network / determins how devices within a private network are devided into subnets (VLANs) and groups of hosts / determins if an address is local or requires routing across subnets. <br> NAT: deals with the translation of addresses between the internal network and the internet / translates private ips to public ip as traffic corsses the networks boundary (router) / from the outside all devices share the same IP irrespective of their particular subnet."
    },
    {
      "id": "networking_static_dynamic_ips",
      "type": "basic",
      "question": "What is the difference between static and dynamically assigned IP addresses?",
      "answer": "A static IP address is manually assigned to a device and does not change, while a dynamically assigned IP address is allocated by a DHCP (Dynamic Host Configuration Protocol) server and may change over time."
    },
    {
      "id": "linux_check_nic",
      "type": "typing",
      "question": "What command can you use to find network interfaces in Linux?",
      "answer": "ip link show"
    },
    {
      "id": "linux_assign_static_ip",
      "type": "basic",
      "question": "How do you assign a static IP to a network interface in Linux?",
      "answer": "Use the command `ip addr add [IP]/[CIDR] dev [interface]`, e.g., `ip addr add 192.168.1.100/24 dev eth0`. Note that this change is temporary and will be lost after a reboot."
    },
    {
      "id": "linux_static_ip_persistent_ubuntu",
      "type": "basic",
      "question": "How do you configure a persistent static IP in Ubuntu?",
      "answer": "In Ubuntu, you can configure a persistent static IP by editing the Netplan configuration file (e.g., `/etc/netplan/01-netcfg.yaml`). Add the following content:\n\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    eth0:\n      dhcp4: no\n      addresses:\n        - 192.168.1.100/24\n      gateway4: 192.168.1.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n\nAfter editing, apply the changes using the command `sudo netplan apply`. To apply this config without reboot, use `sudo netplan apply`. This configuration is specific to Ubuntu and some other Debian-based distributions."
    },
    {
      "id": "linux_netplan_apply_restart",
      "type": "basic",
      "question": "What is the purpose of the `sudo netplan apply` command?",
      "answer": "The `sudo netplan apply` command applies changes made to Netplan configuration files. It ensures the network settings defined in YAML files take effect without requiring a system reboot."
    },
    {
      "id": "linux_static_ip_persistent_redhat",
      "type": "basic",
      "question": "How do you configure a persistent static IP in Red Hat-based distributions?",
      "answer": "In Red Hat-based distributions (e.g., Fedora, CentOS), you can configure a persistent static IP by editing the interface configuration file located in `/etc/sysconfig/network-scripts/`. For example, for the `eth0` interface, edit the file `/etc/sysconfig/network-scripts/ifcfg-eth0` and add:\n\nBOOTPROTO=none\nIPADDR=192.168.1.100\nPREFIX=24\nGATEWAY=192.168.1.1\nDNS1=8.8.8.8\nNAME=eth0\nDEVICE=eth0\nONBOOT=yes\n\nThen restart the network service using `sudo systemctl restart network` or `nmcli` commands. This method is specific to Red Hat-based distributions."
    },
    {
      "id": "linux_static_ip_persistent_redhat",
      "type": "basic",
      "question": "How do you configure a persistent static IP in Red Hat-based distributions?",
      "answer": "Starting with Fedora 33 and RHEL 9, network configuration files are no longer stored in `/etc/sysconfig/network-scripts/`. Instead, the preferred method is to use the nmcli utility. The new NetworkManager keyfiles are located in `/etc/NetworkManager/system-connections/`. For example, to configure a static IP using nmcli, use the following command:\n\n`sudo nmcli connection modify 'Wired connection 1' ipv4.method manual ipv4.addresses 192.168.1.100/24 ipv4.gateway 192.168.1.1 ipv4.dns 8.8.8.8 connection.autoconnect yes`\n\nAfter modifying the connection, restart it using:\n\n`sudo nmcli connection up 'Wired connection 1'`\n\nThis is the recommended method for configuring network settings in modern Fedora and RHEL systems."
    },
    {
      "id": "nmcli_dynamic_ip_configuration",
      "type": "basic",
      "question": "How do you configure a dynamic IP address using nmcli?",
      "answer": "To configure a dynamic IP address using nmcli, use the command:\n\n`sudo nmcli connection modify 'Wired connection 1' ipv4.method auto`\n\nThis enables DHCP for the specified connection. You can verify the change by checking the keyfile in `/etc/NetworkManager/system-connections/`."
    },
    {
      "id": "nmcli_view_connections",
      "type": "basic",
      "question": "How do you view information about active network connections using nmcli?",
      "answer": "Use the command `nmcli connection show` to view details about active network connections, including the name, UUID, type, and device used."
    },
    {
      "id": "nmcli_keyfiles_location",
      "type": "basic",
      "question": "Where are the new NetworkManager keyfiles stored in Fedora and RHEL?",
      "answer": "The new NetworkManager keyfiles are stored in `/etc/NetworkManager/system-connections/`. These keyfiles are used to store network configuration details for connections managed by NetworkManager."
    },
    {
      "id": "linux_network_manager_name",
      "type": "basic",
      "question": "If access to the NetworkManager in Linux fails - what could be the problem?",
      "answer": "Depending on the distro the service might have a slightly different name (a common variant is `network-manager`), search for it using `sudo systemctl list-units --type=service | grep -i network`."
    },
    {
      "id": "linux_network_manager",
      "type": "basic",
      "question": "What is the NetworkManager and what are its repsonsibilities?",
      "answer": "The Linux Network Manager is a system service designed to simplify and manage network configurations by abstracting lower level config. Its responsibilities include: configuration of wired and wireless nics based on static and dynamic ip configs. Management and priorization of network connections. Seamlessly switch between networks (for instance when a cable is connected) / scan for wireless networks and connecting with protocols like WPA / configure dns / briging, tunneling, configuring proxys / provide information to various tools (e.g. nmcli) or graphical tools of Linux desktops"
    },
    {
      "id": "linux_start_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you start it?",
      "answer": "sudo sysctl start NetworkManager"
    },
    {
      "id": "linux_stop_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you stop it?",
      "answer": "sudo sysctl stop NetworkManager"
    },
    {
      "id": "linux_enable_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you ensure it starts at boot time?",
      "answer": "sudo sysctl enable NetworkManager"
    },
    {
      "id": "linux_disable_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you prevent it from starting boot time?",
      "answer": "sudo sysctl disable NetworkManager"
    },
    {
      "id": "linux_status_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you check the status?",
      "answer": "sudo sysctl status NetworkManager"
    },
    {
      "id": "linux_restart_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you restart it?",
      "answer": "sudo sysctl restart NetworkManager"
    },
    {
      "id": "linux_logs_network_manager",
      "type": "typing",
      "question": "Asuming the network manager goes by the name `NetworkManager`, how do you check its logs?",
      "answer": "sudo journalctl -u NetworkManager"
    },
    {
      "id": "linux_interface_state",
      "type": "basic",
      "question": "How do you change the state of a network interface (e.g., bring it up or down)?",
      "answer": "To bring a network interface up, use the command `sudo ip link set [interface] up`. To bring it down, use `sudo ip link set [interface] down`. Replace `[interface]` with the name of your network interface (e.g., `enp0s25`)."
    },
    {
      "id": "linux_ip_addr_show",
      "type": "basic",
      "question": "What can you learn from the `ip addr show` command?",
      "answer": "The `ip addr show` command displays detailed information about network interfaces, including:\n- Interface name and state (e.g., `enp0s25` and `DOWN`)\n- Flags indicating the interface's capabilities (e.g., `BROADCAST`, `MULTICAST`, `UP`)\n- MTU (Maximum Transmission Unit)\n- IP addresses assigned to the interface\n- Qdisc (queuing discipline) settings\n- MAC address."
    },
    {
      "id": "linux_naming_interfaces",
      "type": "basic",
      "question": "How can you give a network interface a human-readable name?",
      "answer": "You can create a human-readable name for a network interface using the `ip link set` command. For example, `sudo ip link set [interface] alias \"Wireless Network\"` assigns the alias 'Wireless Network' to the specified interface."
    },
    {
      "id": "linux_routing_conflict",
      "type": "basic",
      "question": "How do you resolve a routing conflict, such as ensuring HTTP traffic uses a specific connection?",
      "answer": "To resolve a routing conflict, you can adjust the routing table using the `ip route` command. For example, if your LAN connection lacks internet access but your WLAN does, you can ensure HTTP traffic uses WLAN by setting a default route with a higher priority for the WLAN interface:\n\n`sudo ip route add default via [gateway_IP] dev [wlan_interface] metric 100`\n\nReplace `[gateway_IP]` with the WLAN gateway's IP and `[wlan_interface]` with the interface name. The `metric` value determines priority, with lower numbers having higher precedence."
    },
    {
      "id": "dmesg_network_troubleshooting",
      "type": "basic",
      "question": "How can you use `dmesg` logs to troubleshoot networking hardware issues?",
      "answer": "Use the `dmesg` command to check kernel logs for hardware-related issues. Look for messages about network interfaces (e.g., `eth0`, `wlan0`) indicating driver problems, hardware failures, or firmware errors. Combine it with `grep`, e.g., `dmesg | grep eth0`."
    },
    {
      "id": "nmcli_wifi_list",
      "type": "basic",
      "question": "What command lists all available wireless networks in a colorful terminal output?",
      "answer": "The `nmcli dev wifi list` command lists all available wireless networks in a detailed, colorful output. It shows SSID, signal strength, security protocols, and more."
    },
    {
      "id": "nmcli_wifi_connect",
      "type": "basic",
      "question": "How do you connect to a wireless network using a WPA key in Linux?",
      "answer": "Use the `nmcli` command: `nmcli dev wifi connect [SSID] password [WPA_KEY]`. Replace `[SSID]` with the network name and `[WPA_KEY]` with the router's WPA password."
    },
    {
      "id": "wifi_encryption_standards",
      "type": "basic",
      "question": "What are the common Wi-Fi encryption standards, and how do they differ?",
      "answer": "Common Wi-Fi encryption standards include:\n- **WEP**: Weak and outdated.\n- **WPA**: Stronger than WEP but vulnerable to attacks.\n- **WPA2**: Standard for modern networks, secure with AES encryption.\n- **WPA3**: Latest standard, offering enhanced security features."
    },
    {
      "id": "wifi_reset_connection",
      "type": "basic",
      "question": "How do you reset a wireless connection in Linux?",
      "answer": "Restart the interface: `sudo ip link set [wlan_interface] down && sudo ip link set [wlan_interface] up`. You can also reconnect using NetworkManager: `nmcli dev wifi rescan` and `nmcli dev wifi connect [SSID]`."
    },
    {
      "id": "networking_cidr",
      "type": "basic",
      "question": "What is CIDR?",
      "answer": "CIDR (Classless Inter-Domain Routing) is a method for IP address allocation and routing. It uses a prefix length (e.g., /24) to define the division between the network and host portions of an IP address, allowing flexible and efficient IP address use."
    },
    {
      "id": "linux_troubleshoot_connectivity",
      "type": "multiple-choice",
      "question": "What steps can you take to troubleshoot connectivity issues in Linux?",
      "choices": [
        { "text": "Ping the default gateway", "correct": true, "explanation": "This checks if the network connection to the gateway is functional." },
        { "text": "Check DNS configuration", "correct": true, "explanation": "Incorrect DNS settings can cause connectivity issues." },
        { "text": "Restart the network interface", "correct": true, "explanation": "This can resolve temporary network interface issues." },
        { "text": "Restart NetworkManager", "correct": true, "explanation": "Restarting NetworkManager can apply new configurations or resolve connectivity issues." },
        { "text": "Reinstall Linux", "correct": false, "explanation": "This is not a typical troubleshooting step for network issues." },
        { "text": "Disable the firewall permanently", "correct": false, "explanation": "Disabling the firewall can expose the system to security risks and is not a recommended troubleshooting step." },
        { "text": "Run a network speed test", "correct": false, "explanation": "While useful for performance checks, this does not directly help with connectivity troubleshooting." }
      ]
    },
    {
      "id": "network_scan_devices",
      "type": "basic",
      "question": "What command can you use to scan for devices on a network?",
      "answer": "Use the `nmap` command, e.g., `nmap -sn 192.168.1.0/24` to perform a ping scan of the network."
    },
    {
      "id": "network_router_config",
      "type": "basic",
      "question": "How do you access and configure a router?",
      "answer": "Access the router's web interface via its IP address (e.g., 192.168.1.1) in a web browser, and log in using the admin credentials to configure settings like DHCP, static IPs, and port forwarding."
    },
    {
      "id": "wireless_network_analysis",
      "type": "basic",
      "question": "What tools can you use to analyze wireless networks?",
      "answer": "Tools like `iwconfig`, `nmcli`, or GUI tools such as Wireshark can be used to analyze wireless networks in Linux."
    },
    {
      "id": "recipe_troubleshooting",
      "type": "basic",
      "question": "What is the step-by-step process to troubleshoot a connectivity issue?",
      "answer": "1. Check physical connections. 2. Verify the network interface state (`ip link show`). 3. Check IP configuration (`ip addr show`). 4. Ping the default gateway. 5. Check DNS settings. 6. Restart the network interface if needed. 7. Check logs with `journalctl -u NetworkManager`."
    },
    {
      "id": "linux_network_manager_overview",
      "type": "basic",
      "question": "What is NetworkManager, and what are its responsibilities?",
      "answer": "NetworkManager is a network management tool that automates network configuration and management. It is responsible for managing network interfaces, establishing connections (wired, wireless, or VPN), handling DNS configuration, and applying user-defined settings. It simplifies networking tasks on Linux systems."
    },

    {
      "id": "netplan_permissions_warning",
      "type": "basic",
      "question": "Why does Netplan warn about permissions being too open for configuration files?",
      "answer": "Netplan requires its configuration files to be readable only by root for security reasons. If the permissions are too open, it triggers warnings. Use `sudo chmod 600 /etc/netplan/<file>.yaml` to fix the permissions."
    },
    {
      "id": "netplan_gateway4_deprecation",
      "type": "basic",
      "question": "Why does Netplan warn about the deprecation of `gateway4`?",
      "answer": "The `gateway4` directive has been deprecated in favor of using default routes. Replace `gateway4` with:/n/nroutes:/n  - to: 0.0.0.0/0/n    via: [gateway_IP]/n/nThis aligns with updated Netplan configurations."
    },
    {
      "id": "ping_failure_analysis",
      "type": "basic",
      "question": "What could cause a `Destination Host Unreachable` error when pinging an IP address?",
      "answer": "A `Destination Host Unreachable` error indicates no route to the target. Possible causes include:/n1. The target device is on a different subnet and no route exists./n2. The target device has an incorrect IP configuration or is not powered on./n3. The network interface on your device is not correctly configured./n4. The routing table may need verification using `ip route show` to ensure a valid route exists./n5. Use `traceroute [IP]` to trace the path and identify where the connection fails."
    },
    {
      "id": "netplan_config_example",
      "type": "basic",
      "question": "How do you configure a Netplan YAML file with default routes instead of `gateway4`?",
      "answer": "Example configuration:/n/nnetwork:/n  version: 2/n  ethernets:/n    enp2s0:/n      addresses:/n        - 192.168.1.10/24/n      routes:/n        - to: 0.0.0.0/0/n          via: 192.168.1.1/n/nApply the configuration using `sudo netplan apply`."
    },
    {
      "id": "ping_link_local",
      "type": "basic",
      "question": "What is a link-local address, and why might it fail to communicate with devices on a different subnet?",
      "answer": "A link-local address (e.g., 169.254.x.x) is auto-assigned when no DHCP server is available. Devices with link-local addresses can communicate only if they are on the same subnet and link-local range."
    },
    {
      "id": "subnet_change_example",
      "type": "basic",
      "question": "How do you temporarily change a device's IP to match a link-local subnet?",
      "answer": "Use Netplan or `ip addr` to temporarily change the IP to match the subnet of the target device. Example:/n/n`sudo ip addr add 169.254.100.1/24 dev enp2s0`/n/nThis allows communication with devices on the same link-local subnet."
    },
    {
      "id": "network_static_ip_debugging",
      "type": "basic",
      "question": "What steps can you take to troubleshoot static IP issues?",
      "answer": "1. Check Netplan YAML syntax./n2. Verify file permissions (`sudo chmod 600`)./n3. Use `ip addr show` to confirm the interface IP./n4. Verify the routing table with `ip route show`./n5. Ensure the target device is in the same subnet."
    },
    {
      "id": "ip_addr_show_fields",
      "type": "basic",
      "question": "What information can you derive from the output of `ip addr show`?",
      "answer": "The `ip addr show` command provides:/n- Interface name and state (e.g., `enp2s0` and `UP`)./n- Flags like `BROADCAST`, `MULTICAST`, `UP`, `LOWER_UP`./n- MTU (Maximum Transmission Unit) and queueing discipline (e.g., `fq_codel`)./n- Assigned IPv4 and IPv6 addresses (e.g., `inet` and `inet6`)./n- Broadcast and link-local addresses."
    },
    {
      "id": "ip_route_show_analysis",
      "type": "basic",
      "question": "What does the `ip route show` command reveal about network routing?",
      "answer": "The `ip route show` command reveals:/n- Default routes for external traffic./n- Routes to specific subnets or devices./n- Metrics for route priority (lower is preferred)./n- Interfaces used for specific routes./n- Kernel auto-added routes (proto kernel)."
    },
    {
      "id": "ssh_connection_outdated_encryption",
      "type": "basic",
      "question": "What might cause an SSH connection to fail with an older device?",
      "answer": "SSH connections can fail due to outdated encryption mechanisms on older devices. Update your SSH client configuration to include legacy ciphers or key exchange algorithms if necessary. Example: Add `-oKexAlgorithms=+diffie-hellman-group1-sha1` to your SSH command."
    },
{
      "id": "dns_resolvconf_overview",
      "type": "basic",
      "question": "What is resolvconf and what is its purpose?",
      "answer": "`resolvconf` is a utility used to manage the contents of the `/etc/resolv.conf` file dynamically. It handles DNS configuration for multiple programs or network interfaces, updating the file as interfaces come up or go down."
    },
    {
      "id": "dns_systemd_resolved_overview",
      "type": "basic",
      "question": "What is systemd-resolved and what does it do?",
      "answer": "`systemd-resolved` is a system service that provides network name resolution for local applications. It integrates with DNS, LLMNR (Link-Local Multicast Name Resolution), and MDNS (Multicast DNS) to resolve hostnames. It also manages the `/etc/resolv.conf` file."
    },
    {
      "id": "resolvconf_vs_systemd_resolved",
      "type": "basic",
      "question": "How does `resolvconf` differ from `systemd-resolved`?",
      "answer": "`resolvconf` is a lightweight utility for managing DNS configurations, while `systemd-resolved` is part of the `systemd` suite and provides a broader set of features like LLMNR and MDNS support. Modern distributions often use `systemd-resolved` as the default."
    },
    {
      "id": "dns_systemd_resolved_configuration",
      "type": "basic",
      "question": "How do you configure `systemd-resolved` for DNS resolution?",
      "answer": "To configure `systemd-resolved`, edit the `/etc/systemd/resolved.conf` file. Example configuration:/n/n[Resolve]/nDNS=8.8.8.8 8.8.4.4/nDomains=example.com/n/nAfter editing, restart the service with `sudo systemctl restart systemd-resolved`."
    },
    {
      "id": "resolvconf_update_dns",
      "type": "basic",
      "question": "How do you update DNS entries using `resolvconf`?",
      "answer": "To update DNS entries using `resolvconf`, modify the relevant interface configuration file (e.g., `/etc/network/interfaces`) to include DNS settings, such as:/n/niface eth0 inet static/n    address 192.168.1.100/n    netmask 255.255.255.0/n    dns-nameservers 8.8.8.8 8.8.4.4/n/nRestart the networking service or reconfigure the interface to apply the changes."
    },
    {
      "id": "dns_check_effective_configuration",
      "type": "basic",
      "question": "How can you check the effective DNS configuration on a system?",
      "answer": "To check the effective DNS configuration:/n- If using `resolvconf`, view the `/etc/resolv.conf` file directly./n- If using `systemd-resolved`, use `resolvectl status` or `systemd-resolve --status` to see detailed information about DNS settings."
    },
    {
      "id": "nmcli_connect_wifi",
      "type": "basic",
      "question": "How do you connect to a Wi-Fi network using `nmcli`?",
      "answer": "Use the following command to connect to a Wi-Fi network:/n`nmcli dev wifi connect [SSID] password [WPA_KEY]`/nReplace `[SSID]` with the network name and `[WPA_KEY]` with the Wi-Fi password."
    },
    {
      "id": "nmcli_show_active_connections",
      "type": "basic",
      "question": "How can you display active network connections using `nmcli`?",
      "answer": "Run the command `nmcli connection show --active` to list all currently active network connections, including their UUIDs, types, and device names."
    },
    {
      "id": "nmcli_create_static_ip",
      "type": "basic",
      "question": "How do you set up a static IP address using `nmcli`?",
      "answer": "Use the following command to create a connection with a static IP:/n`nmcli connection add type ethernet ifname [interface] con-name [name] ip4 [IP_ADDRESS]/[CIDR] gw4 [GATEWAY]`/nReplace `[interface]`, `[name]`, `[IP_ADDRESS]`, and `[GATEWAY]` with the appropriate values."
    },
    {
      "id": "nmcli_disconnect_device",
      "type": "basic",
      "question": "How can you disconnect a network device using `nmcli`?",
      "answer": "To disconnect a network device, use the command `nmcli device disconnect [DEVICE]`. Replace `[DEVICE]` with the name of the network interface you want to disconnect."
    },
    {
      "id": "nmcli_rescan_wifi",
      "type": "basic",
      "question": "How do you rescan for available Wi-Fi networks using `nmcli`?",
      "answer": "Run the command `nmcli device wifi rescan` to rescan for available Wi-Fi networks. Afterward, use `nmcli device wifi list` to display the updated list of networks."
    },
    {
      "id": "systemd_networkd_overview",
      "type": "basic",
      "question": "What is systemd-networkd and what is its purpose?",
      "answer": "`systemd-networkd` is a system service that manages network configurations for Linux systems. It handles static and dynamic IP configurations, routes, VLANs, bridges, and other networking settings."
    },
    {
      "id": "systemd_networkd_configuration",
      "type": "basic",
      "question": "How do you configure network settings using systemd-networkd?",
      "answer": "Create a `.network` file in `/etc/systemd/network/`. Example configuration:/n/n[Match]/nName=eth0/n/n[Network]/nAddress=192.168.1.100/24/nGateway=192.168.1.1/nDNS=8.8.8.8 8.8.4.4/n/nThen restart the service with `sudo systemctl restart systemd-networkd`."
    },
    {
      "id": "etc_network_interfaces_configuration",
      "type": "basic",
      "question": "How do you configure networking in `/etc/network/interfaces`?",
      "answer": "Edit `/etc/network/interfaces` to configure networking. Example:/n/niface eth0 inet static/n    address 192.168.1.100/n    netmask 255.255.255.0/n    gateway 192.168.1.1/n    dns-nameservers 8.8.8.8 8.8.4.4/n/nRestart networking with `sudo systemctl restart networking`."
    },
    {
      "id": "etc_netplan_configuration",
      "type": "basic",
      "question": "How do you configure networking using Netplan?",
      "answer": "Edit the YAML configuration file in `/etc/netplan/`. Example:/n/nnetwork:/n  version: 2/n  ethernets:/n    eth0:/n      addresses:/n        - 192.168.1.100/24/n      gateway4: 192.168.1.1/n      nameservers:/n        addresses:/n          - 8.8.8.8/n          - 8.8.4.4/n/nApply changes with `sudo netplan apply`."
    },
    {
      "id": "netplan_installer_config",
      "type": "basic",
      "question": "What is the purpose of the /etc/netplan/00-installer-config.yaml file?",
      "answer": "The /etc/netplan/00-installer-config.yaml file is a default configuration file used by Netplan on Ubuntu systems to define network settings. It typically contains settings for interfaces, IP addresses, gateways, and DNS. Changes to this file require running 'sudo netplan apply' to take effect."
    },
    {
      "id": "opensuse_wicked_overview",
      "type": "basic",
      "question": "What is Wicked in openSUSE?",
      "answer": "Wicked is openSUSE's native network management service, used for configuring and managing network connections. It is often used for static configurations on servers."
    },
    {
      "id": "opensuse_wicked_commands",
      "type": "basic",
      "question": "What are some common Wicked commands in openSUSE?",
      "answer": "- `wicked show all`: Displays the current network status.\n- `wicked ifup [interface]`: Brings an interface up.\n- `wicked ifdown [interface]`: Brings an interface down."
    },
    {
      "id": "opensuse_networkmanager_overview",
      "type": "basic",
      "question": "Does openSUSE support NetworkManager?",
      "answer": "Yes, openSUSE supports NetworkManager, which is commonly used in desktop environments for dynamic network management. Tools like `nmcli` and `nmtui` can be used to manage NetworkManager connections."
    },
    {
      "id": "opensuse_nmcli_dynamic_ip",
      "type": "basic",
      "question": "How do you configure a dynamic IP address in openSUSE using NetworkManager?",
      "answer": "Use the following command: \n`sudo nmcli connection modify 'Wired connection 1' ipv4.method auto` \nThis enables DHCP for the specified connection."
    },
    {
      "id": "opensuse_nmcli_static_ip",
      "type": "basic",
      "question": "How do you configure a static IP address in openSUSE using NetworkManager?",
      "answer": "Use the following command: \n`sudo nmcli connection modify 'Wired connection 1' ipv4.method manual ipv4.addresses 192.168.1.100/24 ipv4.gateway 192.168.1.1 ipv4.dns 8.8.8.8 connection.autoconnect yes` \nThen apply the changes using: \n`sudo nmcli connection up 'Wired connection 1'`."
    },
    {
      "id": "hostnamectl_overview",
      "type": "basic",
      "question": "What is the `hostnamectl` command used for?",
      "answer": "The `hostnamectl` command is used to view and modify the system's hostname and related settings."
    },
    {
      "id": "hostnamectl_view_hostname",
      "type": "basic",
      "question": "How do you view the current hostname using `hostnamectl`?",
      "answer": "Run the command `hostnamectl status` to view the current hostname and related metadata."
    },
    {
      "id": "hostnamectl_set_hostname",
      "type": "basic",
      "question": "How do you set a new hostname using `hostnamectl`?",
      "answer": "Use the command `sudo hostnamectl set-hostname [new-hostname]` to set a new static hostname. Replace `[new-hostname]` with the desired name."
    },
    {
      "id": "ports_definition",
      "type": "basic",
      "question": "What is a network port?",
      "answer": "A network port is a logical endpoint for communication, identified by a number (e.g., 80 for HTTP or 22 for SSH), that allows network services to differentiate traffic."
    },
    {
      "id": "sockets_definition",
      "type": "basic",
      "question": "What is a socket in networking?",
      "answer": "A socket is an endpoint for communication between two devices over a network. It consists of an IP address and a port number, enabling applications to send and receive data."
    },
    {
      "id": "common_ports_examples",
      "type": "basic",
      "question": "What are some common network ports and their purposes?",
      "answer": "- 80: HTTP (web traffic)\n- 443: HTTPS (secure web traffic)\n- 22: SSH (remote login)\n- 25: SMTP (email sending)\n- 53: DNS (domain name resolution)\n- 3306: MySQL (database communication)"
    },
    {
      "id": "dnsutils_package_overview",
      "type": "basic",
      "question": "What is the dnsutils package used for?",
      "answer": "The dnsutils package provides tools for querying and managing DNS, including commands like `dig` and `nslookup`."
    },
    {
      "id": "dig_overview",
      "type": "basic",
      "question": "What is the purpose of the `dig` command?",
      "answer": "The `dig` command is used to query DNS servers for information about domains, such as IP addresses, mail servers, and other DNS records."
    },
    {
      "id": "dig_a_record_query",
      "type": "basic",
      "question": "How do you use `dig` to retrieve the A record of a domain?",
      "answer": "Use the command `dig [domain-name]`, e.g., `dig example.com`, to retrieve the A record (IPv4 address) of the specified domain."
    },
    {
      "id": "dig_specific_dns_server",
      "type": "basic",
      "question": "How do you query a specific DNS server using `dig`?",
      "answer": "Use the `@` symbol followed by the DNS server's IP address, e.g., `dig @8.8.8.8 example.com`."
    },
    {
      "id": "dig_query_dns_record_types",
      "type": "basic",
      "question": "How do you query specific DNS record types using `dig`?",
      "answer": "Use the command `dig [domain-name] [record-type]`, e.g., `dig example.com MX` to query the MX (mail exchange) records."
    }

  ],
  "tags": ["networking", "linux", "commands"]
}
